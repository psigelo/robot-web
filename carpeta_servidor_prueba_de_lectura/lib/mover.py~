import serial
import time
import sys

arduino = serial.Serial('/dev/ttyUSB0', 9600)

#Posiciones de moores
#PXMXX = ["posicion equilibrio", "posicion arriba (adelante)", "posicion abajo (atras) "]
P1M0 = ["108150","108090","108200"]
P1M1 = ["109235","109235","109235"]
P1M2 = ["110225","110220","110240"]
P1M3 = ["111130","111060","111180"]
P1M4 = ["112055","112055","112055"]
P1M5 = ["113220","113180","113180"]
P2M0 = ["208080","208045","208150"]
P2M1 = ["209230","209230","209230"]
P2M2 = ["210250","210220","210240"]
P2M3 = ["211110","211200","211090"]
P2M4 = ["212240","212240","212240"]
P2M5 = ["213250","213215","213225"]

def move(abv=0):
	polmot = int(abv[0])*100 + int(abv[1])*10 + int(abv[2])
	ang = int(abv[3])*100 + int(abv[4])*10 + int(abv[5])
	arduino.write(chr(polmot))
	arduino.write(chr(ang))

def posicionInicial():

	move(P1M0[0])
	time.sleep(0.2)
	move(P1M1[0])
	time.sleep(0.2)
	move(P1M2[0])
	time.sleep(0.2)
	move(P1M3[0])
	time.sleep(0.2)
	move(P1M4[0])
	time.sleep(0.2)	
	move(P1M5[0])
	time.sleep(0.2)
	move(P2M0[0])
	time.sleep(0.2)
	move(P2M1[0])
	time.sleep(0.2)
	move(P2M2[0])
	time.sleep(0.2)	
	move(P2M3[0])
	time.sleep(0.2)
	move(P2M4[0])
	time.sleep(0.2)
	move(P2M5[0])
		

def adelante():

	move(P1M2[1]) #Adelante patas 1 y 3
	move(P2M2[1])
	time.sleep(0.3)
	move(P1M0[2])
	move(P1M3[1])
	time.sleep(0.3)
	move(P2M0[1])
	move(P2M3[2])
	time.sleep(0.3)
	move(P1M2[0])
	move(P2M2[0])
	time.sleep(0.5)
	
	move(P1M5[1]) #Adelante patas 2 y 4
	move(P2M5[1])
	time.sleep(0.3)
	move(P1M0[1])
	move(P1M3[2])
	time.sleep(0.08)
	move(P2M0[2])
	move(P2M3[1])
	time.sleep(0.3)
	move(P1M5[0])
	move(P2M5[0])
	
	posicionInicial()
	   	
	
   
def abajo():

	move(P1M2[1]) #Adelante patas 1 y 3
	move(P2M2[1])
	time.sleep(0.1)
	move(P1M0[1])
	move(P1M3[2])
	time.sleep(0.1)
	move(P2M0[2])
	move(P2M3[1])
	time.sleep(0.3)
	move(P1M2[0])
	move(P2M2[0])
	time.sleep(0.3)
	
	move(P1M5[1]) #Adelante patas 2 y 4
	move(P2M5[1])
	time.sleep(0.1)
	move(P1M0[2])
	move(P1M3[1])
	time.sleep(0.1)
	move(P2M0[1])
	move(P2M3[2])
	time.sleep(0.3)
	move(P2M5[0])
	move(P2M5[0])
	
	posicionInicial()
	

def izquierda():
	
	move(P1M5[1]) #Adelante patas 1 y 3
	move(P2M5[1])
	time.sleep(0.1)
	move(P1M0[2])
	move(P1M3[1])
	time.sleep(0.1)
	move(P2M0[1])
	move(P2M3[2])
	time.sleep(0.3)
	move(P1M5[0])
	move(P2M5[0])
	time.sleep(0.3)
	
	move(P1M2[1]) #Adelante patas 2 y 4
	move(P2M2[1])
	time.sleep(0.1)
	move(P1M0[1])
	move(P1M3[2])
	time.sleep(0.1)
	move(P2M0[2])
	move(P2M3[1])
	time.sleep(0.3)
	move(P2M2[0])
	move(P2M2[0])
	
	posicionInicial()
	

def derecha():
	
	move(P1M5[1]) #Adelante patas 1 y 3
	move(P2M5[1])
	time.sleep(0.1)
	move(P1M0[1])
	move(P1M3[2])
	time.sleep(0.1)
	move(P2M0[2])
	move(P2M3[1])
	time.sleep(0.3)
	move(P1M5[0])
	move(P2M5[0])
	time.sleep(0.3)
	
	move(P1M2[1]) #Adelante patas 2 y 4
	move(P2M2[1])
	time.sleep(0.1)
	move(P1M0[2])
	move(P1M3[1])
	time.sleep(0.1)
	move(P2M0[1])
	move(P2M3[2])
	time.sleep(0.3)
	move(P2M2[0])
	move(P2M2[0])
	posicionInicial()
	

    

def cam1():
	arduino.write('V')

def cam2():
	arduino.write('C')

def cam4():
	arduino.write('F')
        
def cam3():
	arduino.write('D')

def ventosa1():
	arduino.write('I')

def ventosa2():
	arduino.write('O')

def ventosa3():
	arduino.write('K')

def ventosa4():
	arduino.write('L')

if(sys.argv[1] == "ar"):
    adelante()
elif(sys.argv[1] == "ab"):
    abajo()
elif(sys.argv[1] == "iz"):
    abajo()
elif(sys.argv[1] == "de"):
    abajo()
elif(sys.argv[1] == "car"):
    cam1()
elif(sys.argv[1] == "cab"):
    cam2()
elif(sys.argv[1] == "ciz"):
    cam3()
elif(sys.argv[1] == "cde"):
    cam4()
elif(sys.argv[1] == "V1"):
    ventosa1()
elif(sys.argv[1] == "V2"):
    ventosa2()
elif(sys.argv[1] == "V3"):
    ventosa3()
elif(sys.argv[1] == "V4"):
    ventosa4()
elif(sys.argv[1] == "eq"):
    posicionInicial()






